############################################
#                                          # 
#  AN�LISIS DE SENTIMIENTOS EN R CON TIDY  #
#        Mg. Jes�s Salinas Flores          #   
#        jsalinas@lamolina.edu.pe          #
#                                          #
############################################

#---------------------------------------------------------
# Para limpiar el workspace, por si hubiera algun dataset 
# o informacion cargada
rm(list = ls())


#---------------------------------------------------------
# Cambiar el directorio de trabajo
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()

###############
#  Librer�as  #
###############

library(dplyr)
library(tidytext)
library(tidyr)
library(ggplot2)

####################
# El paquete dplyr #
####################

# dplyr es el paquete m�s �til en R para la manipulaci�n de 
# datos. Una de las ventajas es que puede usar la funci�n de
# "%>%" para combinar diferentes funciones en R. 

# Lista completa de funciones que ofrece dplyr:
# select():    selecciona columnas de su conjunto de datos
# filter():    filtra ciertas filas que cumplen con el criterio
# group_by (): agrupa diferentes observaciones de manera que 
#              el conjunto de datos original no cambie. 
#              S�lo la forma en que se representa se cambia en
#              forma de una lista
# summarise(): resume cualquiera de las funciones anteriores
# arrange():   ordena los datos de tu columna en orden ascendente 
#              o descendente
# join():      realiza left, right, full y inner join en R
# mutate():    crea nuevas columnas conservando las variables 
#              existentes

library(dplyr)
View(starwars)
str(starwars)

# Usando filter
eje1 <- filter(starwars,species == "Droid")
eje1

# Usando filter y %>%
eje1 <- starwars %>%  filter(species == "Droid")
eje1

# Usando select - Caso 1
eje2 <- starwars %>%  select(name, gender,films)
eje2

# Usando select - Caso 2
eje3 <- starwars %>%  select(name, ends_with("color"))

# Usando mutate
eje4 <- starwars %>% 
  mutate(name, imc = mass / ((height / 100)  ^ 2)) %>%
  select(name:mass, imc)

# Usando arrange
eje5 <- starwars %>% arrange(desc(mass))

# Usando group_by y summarise
eje6 <- starwars %>%
  group_by(species) %>%
  summarise(n = n(),mass = mean(mass, na.rm = TRUE)) %>%
  filter(n > 1,mass > 50)

ggplot(data=eje6, aes(x=species,y=mass, fill=species)) +
  geom_bar(stat="identity") +
  theme_classic() +
  scale_fill_manual(values=terrain.colors(8)) +
  theme(legend.position="none") +
  labs(title="Peso promedio por especie",
       x= "Especie",
       y= "Peso promedio")

starwars %>%
  group_by(species) %>%
  summarise(n = n(),mass = mean(mass, na.rm = TRUE)) %>%
  filter(n > 1,mass > 50) %>%
  ggplot(aes(x=species,y=mass, fill=species)) +
  geom_bar(stat="identity") +
  theme_classic() +
  scale_fill_manual(values=terrain.colors(8)) +
  theme(legend.position="none") +
  labs(title="Peso promedio por especie",
       x= "Especie",
       y= "Peso promedio")


################################
# Tweets en los Estados Unidos #
################################

#---------------------------------------------------------
# 1.1 Usando l�xicos (diccionarios) de sentimientos

#   afinn from Finn �rup Nielsen,
#   bing from Bing Liu and collaborators, y
#   nrc from Saif Mohammad and Peter Turney.

library(dplyr)
library(tidytext)

#---------------------------------------------------------
# Elegir el l�xico afinn 
get_sentiments("afinn")
afinn <- get_sentiments("afinn")

# Contando las palabras por el sentimiento (score)
get_sentiments("afinn") %>% count(value) 

#---------------------------------------------------------
# Elegir el l�xico bing 
get_sentiments("bing")
bing <- get_sentiments("bing")

# Contando las palabras por el sentimiento (score)
get_sentiments("bing") %>% count(sentiment) 

#---------------------------------------------------------
# Elegir el l�xico nrc
get_sentiments("nrc")
nrc <- get_sentiments("nrc")

# Contando las palabras por el sentimiento (score)
get_sentiments("nrc") %>% count(sentiment) 

#---------------------------------------------------------
# 1.2 Implementando un inner join

# La data geocoded_tweets dataset ha sido tomado de Quartz 
# y contiene tres columnas:

#    state, un estado de Los Estados Unidos
#    word,  una palabra usada en los tweets de Twitter
#    freq,  la frecuencia promedio de esa palabra en ese 
#           estado (por billon de palabras)

load("geocoded_tweets.rda")
str(geocoded_tweets)

# Accediendo al l�xico bing
bing <- get_sentiments("bing")
str(bing)
head(bing)

# Haciendo inner join del data frame con el l�xico bing
geocoded_tweets %>% inner_join(bing)

tweets_bing <- geocoded_tweets %>% inner_join(bing)

str(tweets_bing)


#---------------------------------------------------------
# 1.3 �Cu�les son las palabras m�s asociadas con "sadness"?

# Accediendo al l�xico bing
nrc <- get_sentiments("nrc")
str(nrc)

# Haciendo inner join del data frame con el l�xico nrc
geocoded_tweets %>% inner_join(nrc)

tweets_nrc <- geocoded_tweets %>% inner_join(nrc)
str(tweets_nrc)

tristeza <- tweets_nrc %>%
  filter(sentiment == "sadness") %>%
  group_by(word) %>%
  summarize(freq = mean(freq)) %>%
  arrange(desc(freq))

# Ejercicio
# Grafique con ggplot2 las palabras vinculadas a sadness
# que tengan una frecuencia promedio mayor a 350,000


#---------------------------------------------------------
# 1.4 �Cu�les son las palabras m�s asociadas con "joy"?

joy_words <- tweets_nrc %>%
  filter(sentiment== "joy") %>%
  group_by(word) %>%
  summarize(freq = mean(freq)) %>%
  arrange(desc(freq))

library(ggplot2)
options(scipen = 999)

joy_words %>% 
  top_n(20) %>%
  mutate(word = reorder(word, freq)) %>%
  ggplot(aes(x=word,y=freq)) +
  geom_col() +
  coord_flip() 


#---------------------------------------------------------
# 1.5 �Las personas en diferentes estados usan diferentes
#      palabras?

tweets_nrc %>%
  filter(state == "utah",
         sentiment=="joy") %>%
  arrange(desc(freq))

tweets_nrc %>%
  filter(state == "louisiana",
         sentiment=="joy") %>%
  arrange(desc(freq))

#---------------------------------------------------------
# 1.6 �Cu�les estados tienen m�s usuarios con twitters
#      positivos?

bing <- get_sentiments("bing")

geocoded_tweets %>% inner_join(bing)

tweets_bing <- geocoded_tweets %>% inner_join(bing)

str(tweets_bing)

tweets_bing %>% group_by(state,sentiment) %>%
  summarize(freq = mean(freq)) %>%
  spread(sentiment, freq) %>%
  ungroup() %>%
  mutate(ratio = positive / negative,
         state = reorder(state, ratio)) %>%
  ggplot(aes(state,ratio)) +
  geom_point() +
  coord_flip()